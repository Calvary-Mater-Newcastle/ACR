function hdl_GUI=GUI_imshow(I)
% This GUI script displays the input image and allows user to adjust the
% two bars in order to change the display intensity range of the image. The
% main purpose of this script is to replace the necessity of use of IMTOOL,
% which cannot be used if compilation is needed.
% 
% NOTE:
%   Compiler 6.0 cannot do IMTOOL, but 6.2 can. This script can be used for
%       user who does not have 6.2.
%
% Input:
%   I: image (matrix)
% Output:
%   
% Usage: 
%   
% HW: (search for HW)
%   
% Naughty Boy: (search for NAUGHTY BOY)
% 
% Author: Jidi Sun
% Email: jidi.sun@uon.edu.au
% Version: v1 (26/06/16)
%          v2 
% History: v1 
%          v2 
% Possible Improvement: 
% 
% Copyright: please see license.txt
% Acknowledgement: My study is funded by the Cancer Council NSW, Australia,
%                  project grant RG11-05. PhD under the University of 
%                  Newcastle and the Calvary Mater Newcastle Hospital 
%                  provides me the office and the MR scanner to work with.

%1.define GUI size based on sreensize
screen_sz=get(0,'MonitorPositions');
dummy_left=1/10*screen_sz(1,3);
dummy_btm=1/9*screen_sz(1,4);
dummy_width=4/5*screen_sz(1,3);
dummy_height=4/5*screen_sz(1,4);
GUI_scale_factor=0.8;
GUI_width=1200*GUI_scale_factor;
GUI_height=700*GUI_scale_factor;
hdl_GUI=figure('Visible','on',...%define GUI hdl
    'MenuBar','none',...
    'Toolbar','Figure',...
    'Resize','off',...
    'Position',[dummy_left,dummy_btm,GUI_width,GUI_height],...
    'Name','Display image and intensity range',...
    'NumberTitle','off');
%2.construct the components
hdl_ax=axes('Units','normalized',...%define axes
    'Position',[0.1,0.1,0.6,0.8],...
    'FontSize',11,...
    'NextPlot','replace',...
    'XTickLabel',{},...
    'Parent',hdl_GUI);
hdl_sld_min=uicontrol('style','slider',...%define min slider bar
    'units','normalized',...
    'Min',min(I(:)),...
    'Max',max(I(:)),...
    'Value',min(I(:)),...
    'position',[0.75,0.7,0.2,0.1],...
    'Callback',@CB_sld_min);
hdl_sld_max=uicontrol('style','slider',...%define max slider bar
    'units','normalized',...
    'Min',min(I(:)),...
    'Max',max(I(:)),...
    'Value',max(I(:)),...
    'position',[0.75,0.6,0.2,0.1],...
    'Callback',@CB_sld_max);
hdl_txt_minword=uicontrol(hdl_GUI,...%define min txtbox for display only
    'Style','text',...
    'String','Min',...
    'Fontsize',14,...
    'Fontweight','bold',...
    'Units','normalized',...
    'Position',[0.65,0.675,0.1,0.1]);
hdl_txt_maxword=uicontrol(hdl_GUI,...%define max txtbox for display only
    'Style','text',...
    'String','Max',...
    'Fontsize',14,...
    'Fontweight','bold',...
    'Units','normalized',...
    'Position',[0.65,0.575,0.1,0.1]);
hdl_txt_min_max=uicontrol(hdl_GUI,...%define min/max txt
    'Style','text',...
    'String','Min - Max',...
    'Fontsize',14,...
    'Fontweight','bold',...
    'Units','normalized',...
    'Position',[0.75,0.8,0.2,0.1],...
    'Callback',@CB_txt_min_max);
% hdl_txt_min=uicontrol(hdl_GUI,...%define min txt
%     'Style','text',...
%     'String','Min',...
%     'Fontsize',14,...
%     'Fontweight','bold',...
%     'Units','normalized',...
%     'Position',[0.75,0.8,0.2,0.1],...
%     'Callback',@CB_txt_min);
% hdl_txt_max=uicontrol(hdl_GUI,...%define max txt
%     'Style','text',...
%     'String','Max',...
%     'Fontsize',14,...
%     'Fontweight','bold',...
%     'Units','normalized',...
%     'Position',[0.75,0.55,0.2,0.1],...
%     'Callback',@CB_txt_max);
hdl_btn_close=uicontrol(hdl_GUI,...%define close button
    'Style','pushbutton',...
    'String','CLOSE',...
    'Fontsize',14,...
    'Units','normalized',...
    'Position',[0.75,0.25,0.2,0.1],...
    'Callback',@CB_close);
%3.display image
imshow(I,[hdl_sld_min.Value hdl_sld_max.Value],'Parent',hdl_ax);
%4.callbacks for GUI components
    function CB_sld_min(hObject,eventdata,handles)
        %read slider value
        n=round(get(hObject,'Value'));
        %show value in txt
        if n<hdl_sld_max.Value
            set(hdl_txt_min_max,'String',...
                [num2str(n) ' - ' num2str(round(hdl_sld_max.Value))]);
        else%if min>=max,then set val to max-1
            set(hdl_txt_min_max,'String',...
                [num2str(round(hdl_sld_max.Value-1)) ' - ' ...
                num2str(round(hdl_sld_max.Value))]);
        end
        %set image range
        if n<hdl_sld_max.Value
            set(hdl_ax,'CLim',...
                [n,hdl_sld_max.Value]);
            set(hObject,'BackgroundColor',[.94 .94 .94]);
        else%if min>=max,then set val to max-1
            set(hdl_ax,'CLim',...
                [round(hdl_sld_max.Value-1),hdl_sld_max.Value]);
            set(hObject,'BackgroundColor','r');
        end
    end
    function CB_sld_max(hObject,eventdata,handles)
        %read slider value
        n=round(get(hObject,'Value'));
        %show value in txt
        if n>hdl_sld_min.Value
            set(hdl_txt_min_max,'String',...
                [num2str(round(hdl_sld_min.Value))  ' - ' num2str(n)]);
        else%if min>=max,then set val to max-1
            set(hdl_txt_min_max,'String',...
                [num2str(round(hdl_sld_min.Value)) ' - ' ...
                num2str(round(hdl_sld_min.Value+1))]);
        end
        %set image range
        if n>hdl_sld_min.Value
            set(hdl_ax,'CLim',...
                [hdl_sld_min.Value,n]);
            set(hObject,'BackgroundColor',[.94 .94 .94]);
        else%if min>=max,then set val to min+1
            set(hdl_ax,'CLim',...
                [hdl_sld_min.Value,round(hdl_sld_min.Value+1)]);
            set(hObject,'BackgroundColor','r');
        end
    end
    function CB_close(hObject,eventdata,handles)
        close(hdl_GUI);
    end
end